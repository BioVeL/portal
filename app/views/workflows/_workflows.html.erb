<%
# Copyright (c) 2012-2013 Cardiff University, UK.
# Copyright (c) 2012-2013 The University of Manchester, UK.
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the names of The University of Manchester nor Cardiff University nor
#   the names of its contributors may be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Authors
#     Abraham Nieva de la Hidalga
#     Robert Haines
#
# Synopsis
#
# BioVeL Taverna Lite  is a prototype interface to Taverna Server which is
# provided to support easy inspection and execution of workflows.
#
# For more details see http://www.biovel.eu
#
# BioVeL is funded by the European Commission 7th Framework Programme (FP7),
# through the grant agreement number 283359.
%>
<table id="private_workflows" class="table">
  <thead>
    <tr>
      <th>Title</th>
      <th>Author(s)</th>
      <% if user_signed_in? && current_user.admin -%>
        <th>Owner</th>
      <% end -%>
      <th>Uploaded</th>
      <th>Operations</th>
    </tr>
  </thead>
  <tbody>
  <% workflows.each do |workflow| %>
    <tr>
      <td title="<%= workflow.description %>" alt="<%= workflow.description %>">
        <dl class="wf_snip">
          <dt><%= link_to workflow.title, workflow  %></dt>
          <dd><%= workflow.description.nil? ? "" : workflow.description[0,79]+"..." %></dd>
        </dl>
    </td>
    <td>
      <%= workflow.author %>
    </td>
    <% if user_signed_in? && current_user.admin -%>
      <td>
        <% if workflow.user_id !=0 %>
          <%=User.find(workflow.user_id).name %>
        <%else%>
          No user
        <%end%>
      </td>
    <% end -%>
    <td><%= workflow.created_at.strftime("%Y/%m/%d %H:%M") %></td>
    <td>
      <div class="btn-group">
        <%= link_to 'Run', {:controller => 'runs' ,
            :action => 'new_run', :id => workflow.id}, :class => "btn btn-mini" %>
        <%= link_to 'Download', {:controller => 'workflows' ,
            :action => 'download', :id => workflow.id}, :class => "btn btn-mini" %>
        <% if workflow.user == current_user %>
          <% if workflow.shared? -%>
            <%= link_to "Make private", make_private_workflow_path(workflow), :method => :put, :class => "btn btn-mini"%>
          <% else -%>
            <%= link_to "Make public", make_public_workflow_path(workflow), :method => :put, :class => "btn btn-mini" %>
          <% end -%>
          <%= link_to 'Remove', workflow, :class => "btn btn-mini btn-danger",
              :method => :delete,
              :data => { :confirm => 'Remove this workflow: ' +
                           workflow.title.to_s + "?" } %>
        <% end %>
      </div>
    </td>
  </tr>
  <% end -%>
  </tbody>
</table>
